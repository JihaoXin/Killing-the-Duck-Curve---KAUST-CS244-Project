//
// Generated file, do not edit! Created by opp_msgtool 6.0 from greenwireless.msg.
//

#ifndef __GREENWIRELESS_M_H
#define __GREENWIRELESS_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class greenMsg;
/**
 * Class generated from <tt>greenwireless.msg:2</tt> by opp_msgtool.
 * <pre>
 * message greenMsg
 * {
 *     int priority = 0;
 *     int hopCount = 0;
 * }
 * </pre>
 */
class greenMsg : public ::omnetpp::cMessage
{
  protected:
    int priority = 0;
    int hopCount = 0;

  private:
    void copy(const greenMsg& other);

  protected:
    bool operator==(const greenMsg&) = delete;

  public:
    greenMsg(const char *name=nullptr, short kind=0);
    greenMsg(const greenMsg& other);
    virtual ~greenMsg();
    greenMsg& operator=(const greenMsg& other);
    virtual greenMsg *dup() const override {return new greenMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getPriority() const;
    virtual void setPriority(int priority);

    virtual int getHopCount() const;
    virtual void setHopCount(int hopCount);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const greenMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, greenMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline greenMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<greenMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __GREENWIRELESS_M_H

